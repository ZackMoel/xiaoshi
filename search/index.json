[{"content":"Linux-文件系统与权限管理 一、文件系统 1、文件系统概述 💡文件系统是操作系统用于明确存储设备或分区上的文件的方法和数据结构；即在存储设备上组织文件的方法。操作系统中负责管理和存储文件信息的软件机构称为文件管理系统，简称文件系统。\n2、文件系统类型及使用场景 常见文件类型 使用场景 FAT windows9X系统使用的文件系统，包括FAT16，FAT32 NTFS NTFS文件系统是一个基于安全性的文件系统，是Windows NT所采用的独特的文件系统结构，Win 2000采用了更新版本的NTFS文件系统NTFS 5.0 NFS 网络文件系统，用于在UNIX系统间通过网络进行文件共享 RAW RAW文件系统是一种磁盘未经处理或者未经格式化产生的文件系统 Ext GNU/Linux系统中标准的文件系统，其特点为存取文件的性能极好，对于中小型的文件更显示出优势，包括Ext2，Ext3，Ext4 XFS 一种高性能的日志文件系统，最早于1993年，由Silicon Graphics为他们的IRIX操作系统而开发，之后被移植到Linux内核上，特别擅长处理大文件，同时提供平滑的数据传输。 ISO 9600 该文件系统中光盘所使用的标准文件系统，Linux对该文件系统也有很好的支持，不仅能读取光盘和光盘ISO映像文件，而且还支持在Linux环境中刻录光 3、系统交换分区 💡Linux系统交换空间（swap）就是磁盘上的一块区域，可以是一个分区，也可以是一个文件，简单的说就是当物理内存资源紧张时，将内存中不常访问的资源保存到预先设定的硬盘上的交换空间，来释放该资源占用的内存，这样系统就有更多的物理内存为各个进程服务，而当系统需要访问swap上存储的内容时，再将swap上的数据加载到内存中。\nRAM大小 推荐的交换空间 ≤ 2GB 2X RAM 2GB – 8GB = RAM \u0026gt;8GB 8GB 二、权限管理 基本权限 – 读取：允许查看内容-read 利用r表示\n– 写入：允许修改内容-write 利用w表示\n– 可执行：允许运行和切换-excute 利用x表示\n对于文本文件 读取权限(r)：cat、head、tail、less、grep\n写入权限(w)：vi（保存退出）、\u0026gt;、\u0026gt;\u0026gt;\n可执行权限(x)：Shell脚本、Python脚本\n归属关系 – 所有者：拥有此文件/目录的用户-user 利用u表示\n– 所属组：拥有此文件/目录的组-group 利用g表示\n– 其他用户：除所有者、所属组以外的用户-other 利用o表示\n执行 ls -l或ls -ld命令查看文件/目录权限 以-开头：表示文本文件\n以d开头：表示目录\n以l开头:快捷方式或者链接文件\n1 2 3 4 5 6 [root@A ~]# ls -l /etc/shadow [root@A ~]# ls -l /etc/passwd [root@A ~]# ls -ld /etc/ [root@A ~]# ls -ld /root [root@A ~]# ls -ld /home/zhangsan [root@A ~]# ls -ld /tmp #默认具备附加权限的目录 修改权限 chmod命令 – 格式：chmod [ugoa] [+-=] [rwx] 文件\u0026hellip;\n常用命令选项 – -R：递归修改权限\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 [root@A /]# mkdir /nsd01 [root@A /]# ls -ld /nsd01 [root@A /]# chmod u-w /nsd01 #修改所有者权限 [root@A /]# ls -ld /nsd01 [root@A /]# chmod u+w /nsd01 #修改所有者权限 [root@A /]# ls -ld /nsd01 [root@A /]# chmod g=rwx /nsd01 #修改所属组权限 [root@A /]# ls -ld /nsd01 [root@A /]# chmod u=rwx,g=rx,o=--- /nsd01 [root@A /]# ls -ld /nsd01 [root@A /]# chmod a=rwx /nsd01 #赋予所有人rwx权限 [root@A /]# ls -ld /nsd01 [root@A /]# mkdir -p /opt/aaa/bbb/ccc [root@A /]# ls -R /opt/aaa [root@A /]# chmod -R o=--- /opt/aaa #递归设置权限 [root@A /]# ls -ld /opt/aaa [root@A /]# ls -ld /opt/aaa/bbb/ [root@A /]# ls -ld /opt/aaa/bbb/ccc/ Linux 判断用户具备的权限 1.首先判断，用户对于该数据，处于的身份(角色)\n2.查看数据，相应身份的权限位置，权限内容\n• 用户对于目录具备权限\n读取权限(r)：可以查看目录内容\n写入权限(w)：可以新建、删除、改名,目录的内容，对目录本身没有修改权限\n可执行权限(x)：可以进入切换到该目录下(一位用户能否切换到一个目录只和x执行权限有关)\n案例1：设置基本权限 1）以root身份新建/nsddir1/目录，在此目录下新建readme.txt文件 1 2 3 4 5 [root@localhost ~]# mkdir /nsddir1 [root@localhost ~]# echo 123456 \u0026gt; /nsddir1/readme.txt [root@localhost ~]# cat /nsddir1/readme.txt 2）使用户zhangsan能够修改readme.txt文件内容 1 [root@localhost ~]# chmod o+w /nsddir1/readme.txt 3）使用户zhangsan不可以修改readme.txt文件内容 1 [root@localhost ~]# chmod o-w /nsddir1/readme.txt 4）使用户zhangsan能够在此目录下创建/删除子目录 1 2 3 [root@localhost ~]# chmod o+w /nsddir1/ [root@localhost ~]# ls -ld /nsddir1/ 5）调整此目录的权限，使任何用户都不能进入，然后测试用户zhangsan是否还能修改readme.txt（测试结果不能，对父目录没有权限） 1 [root@localhost ~]# chmod a-x /nsddir1/ 6）为此目录及其下所有文档设置权限 rwxr-x\u0026mdash; 1 [root@localhost ~]# chmod -R u=rwx,g=rx,o=--- /nsddir1/ 权限位的8进制数表示 r、w、x分别对应4、2、1，后3组分别求和\n分组 User权限 Group权限 Other权限 字符 r w x r - x r - x 数字 4 2 1 4 0 1 4 0 1 求和 7 5 5 1 2 3 4 5 6 7 8 9 10 [root@A /]# mkdir /nsd03 [root@A /]# ls -ld /nsd03 [root@A /]# chmod 700 /nsd03 [root@A /]# ls -ld /nsd03 [root@A /]# chmod 007 /nsd03 [root@A /]# ls -ld /nsd03 [root@A /]# chmod 750 /nsd03 [root@A /]# ls -ld /nsd03 新建文件/目录的默认权限 – 一般文件默认均不给 x 执行权限\n– 其他取决于 ​umask​​ 设置\n– 目录默认的权限为755，文件的默认权限为644\n1 2 3 4 5 6 7 8 9 [root@A /]# umask 0022 [root@A /]# umask 077 #修改umask值 [root@A /]# umask 0077 [root@A /]# mkdir /nsd05 [root@A /]# ls -ld /nsd05 drwx------. 2 root root 6 9月 8 14:17 /nsd05 [root@A /]# umask 022 修改归属关系 chown命令 – chown 属主 文件\u0026hellip;\n– chown 属主:属组 文件\u0026hellip;\n– chown :属组 文件\u0026hellip;\n常用命令选项 – -R：递归修改归属关系\n1 2 3 4 5 6 7 8 9 10 11 [root@A /]# mkdir /nsd07 [root@A /]# ls -ld /nsd07 [root@A /]# groupadd tmooc #创建tmooc组 [root@A /]# chown zhangsan:tmooc /nsd07 [root@A /]# ls -ld /nsd07 [root@A /]# chown lisi /nsd07 #单独修改所有者 [root@A /]# ls -ld /nsd07 [root@A /]# chown :root /nsd07 #单独修改所属组 [root@A /]# ls -ld /nsd07 Linux 判断用户具备的权限 匹配即停止原则 1.用户对于该数据处于的身份(角色) 所有者 \u0026gt; 所属组 \u0026gt;其他人\n2.查看数据，相应身份的权限位置，权限内容\n案例2：归属关系练习 1）利用root的身份新建/tarena目录，并进一步完成下列操作 1 [root@localhost ~]# mkdir /tarena 2）将/tarena属主设为gelin01，属组设为tmooc组 1 2 3 4 5 [root@localhost ~]# useradd gelin01 [root@localhost ~]# groupadd tmooc [root@localhost ~]# chown gelin01:tmooc /tarena 3）使用户gelin01对此目录具有rwx权限，除去所有者与所属组之外的用户对此目录无任何权限 1 [root@localhost ~]# chmod o=--- /tarena 4）使用户gelin02能进入、查看此目录 1 2 3 [root@localhost ~]# useradd gelin02 [root@localhost ~]# gpasswd -a gelin02 tmooc 5）将gelin01加入tmooc组，将tarena目录的权限设为450，测试gelin01用户能否进入此目录 1 2 3 [root@localhost ~]# gpasswd -a gelin01 tmooc [root@localhost ~]# chmod 450 /tarena 案例3： 实现lisi用户可以读取/etc/shadow文件内容，您有几种办法？ 利用其他人 1 [root@A /]# chmod o+r /etc/shadow 利用所属组 1 2 3 [root@A /]# chown :lisi /etc/shadow [root@A /]# chmod g+r /etc/shadow 利用所有者 1 2 3 [root@A /]# chown lisi /etc/shadow [root@A /]# chmod u+r /etc/shadow 利用ACL策略 1 [root@A /]# setfacl -m u:lisi:r /etc/shadow 附加权限（特殊权限） 粘滞位，Sticky Bit 权限 – 占用其他人（Other）的 x 位\n– 显示为 t 或 T，取决于其他人是否有 x 权限\n– 适用于目录，用来限制用户滥用写入权\n– 在设置了粘滞位的文件夹下，即使用户有写入权限，也不能删除或改名其他用户文档\n1 2 3 4 5 6 [root@A /]# mkdir /home/public [root@A /]# chmod 777 /home/public [root@A /]# ls -ld /home/public [root@A /]# chmod o+t /home/public [root@A /]# ls -ld /home/public SGID 权限 – 占用属组（Group）的 x 位\n– 显示为 s 或 S，取决于属组是否有 x 权限\n– 对目录有效\n– 在一个具有SGID权限的目录下，新建 的文档会自动继承此目录的属组身份\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 [root@A /]# mkdir /nsd10 [root@A /]# ls -ld /nsd10 [root@A /]# chown :tmooc /nsd10 [root@A /]# ls -ld /nsd10 [root@A /]# mkdir /nsd10/abc01 [root@A /]# ls -ld /nsd10/abc01 [root@A /]# chmod g+s /nsd10 #赋予SetGID权限 [root@A /]# ls -ld /nsd10 [root@A /]# mkdir /nsd10/abc02 [root@A /]# ls -ld /nsd10/abc02 [root@A /]# touch /nsd10/1.txt [root@A /]# ls -l /nsd10/1.txt ACL策略管理（ACL权限） acl 访问策略 – \u0026lt;u\u0026gt;​能够对个别用户、个别组设置独立的权限**​ \u0026lt;/u\u0026gt;\n– 大多数挂载的EXT3/4、XFS文件系统默认已支持\n• setfacl命令\n– 格式：setfacl [选项] u:用户名:权限 文件\u0026hellip;\nsetfacl [选项] g:组名:权限 文件\u0026hellip;\n• 常用命令选项\n– -m：定义一条ACL策略\n– -x：清除指定的ACL策略\n– -b：清除所有已设置的ACL策略\n– -R：递归设置ACL策略\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 [root@A /]# mkdir /nsd11 [root@A /]# chmod 770 /nsd11 [root@A /]# ls -ld /nsd11 [root@A /]# su - lisi [lisi@A ~]$ cd /nsd11 -bash: cd: /nsd11: 权限不够 [lisi@A ~]$ exit [root@A /]# setfacl -m u:lisi:rx /nsd11 #设置ACL策略 [root@A /]# getfacl /nsd11 #查看ACL策略 [root@A /]# su - lisi [lisi@A ~]$ cd /nsd11 [lisi@A nsd11]$ pwd [lisi@A nsd11]$ exit [root@A /]# 将某个用户拉黑（制作黑名单） 1 2 3 [root@A /]# ls -ld /home/public/ drwxrwxrwt. 2 root root 41 9月 8 15:53 /home/public/ [root@A /]# setfacl -m u:lisi:--- /home/public setfacl 命令练习 1 2 3 4 5 6 7 8 9 10 11 [root@A /]# mkdir /nsd12 [root@A /]# setfacl -m u:dc:rwx /nsd12 [root@A /]# setfacl -m u:zhangsan:rx /nsd12 [root@A /]# setfacl -m u:lisi:rwx /nsd12 [root@A /]# setfacl -m u:tom:rwx /nsd12 [root@A /]# getfacl /nsd12 #查看ACL策略 [root@A /]# setfacl -x u:zhangsan /nsd12 #删除指定ACL [root@A /]# getfacl /nsd12 [root@A /]# setfacl -b /nsd12 #清除所有ACL策略 [root@A /]# getfacl /nsd12 -R : 递归设置 ACL 策略 1 2 3 4 5 6 7 8 9 10 [root@A /]# ls -R /opt/aaa /opt/aaa: bbb /opt/aaa/bbb: ccc /opt/aaa/bbb/ccc: [root@A /]# setfacl -Rm u:lisi:rx /opt/aaa [root@A /]# getfacl /opt/aaa [root@A /]# getfacl /opt/aaa/bbb [root@A /]# getfacl /opt/aaa/bbb/ccc 课后习题 案例1：chmod权限设置 1）以root用户新建/nsddir/目录，在该目录下新建文件readme.txt\n1 2 [root@Localhost ~]# mkdir /nsddir/ [root@Localhost ~]# touch /nsddir/readme.txt 2）使用户zhangsan能够在/nsddir/目录下创建/删除子目录\n1 2 3 4 5 6 [root@Localhost ~]# useradd zhangsan [root@Localhost ~]# chmod o+w /nsddir/ [root@localhost ~]# su -zhangsan [zhangsan@localhost ~]$ mkdir /nsddir/zhangsan [zhangsan@localhost ~]$ ls /nsddir [zhangsan@localhost ~]$ exit 3）使用户zhangsan能够修改/nsddir/readme.txt文件的容\n1 2 3 4 [root@Localhost ~]# chmod o+w /nsddir/readme.txt [zhangsan@localhost ~]$ echo xixi \u0026gt;\u0026gt; /nsddir/readme.txt [zhangsan@localhost ~]$ cat /nsddir/readme.txt [zhangsan@localhost ~]$ exit 案例2：chown归属设置 1）新建/tarena1目录\na）将属主设为gelin01，属组设为tarena组 1 2 3 4 [root@Localhost ~]# mkdir /tarena1 [root@Localhost ~]# useradd gelin01 [root@Localhost ~]# groupadd tarena [root@Localhost ~]# chown gelin01:tarena /tarena1 b）使用户gelin01对此目录具有rwx权限，其他人对此目录无任何权限 1 2 3 [root@Localhost ~]# ls -ld /tarena1 [root@Localhost ~]# chmod o=--- /tarena1 [root@Localhost ~]# ls -ld /tarena1 2）使用户gelin02能进入、查看/tarena1文件夹（提示：将gelin02加入所属组）\n1 2 3 4 5 6 7 [root@Localhost ~]# useradd gelin02 [root@Localhost ~]# gpasswd -a gelin02 tarena [root@Localhost ~]# id gelin02 [root@Localhost ~]# su-gelin02 [gelin02@Localhost ~]# cd /tarena1 [gelin02@Localhost ~]# ls [gelin02@Localhost ~]# exit 3）新建/tarena2目录\na）将属组设为tarena 1 2 [root@Localhost ~]# mkdir /tarena2 [root@Localhost ~]# chown :tarena /tarena2 b）使tarena组的任何用户都能在此目录下创建、删除文件 1 2 3 4 5 6 7 8 [root@Localhost ~]# chmod g+w /tarena2 [root@Localhost ~]# useradd ceshi [root@Localhost ~]# gpasswd -a ceshi tarena [root@Localhost ~]# id ceshi [root@Localhost ~]# su -ceshi [ceshi@Localhost ~]# mkdir /tarena2/ceshi [ceshi@Localhost ~]# ls /tarena2 [ceshi@Localhost ~]# exit 4）新建/tarena/public目录\na）使任何用户对此目录都有rwx权限 1 2 [root@Localhost ~]# mkdir -p /tarena/public [root@Localhost ~]# chmod 777 /tarena/public b）拒绝zhangsan进入此目录，对此目录无任何权限（提示ACL黑名单） 1 2 3 4 5 6 7 [root@Localhost ~]# ls -ld /tarena/public [root@Localhost ~]# setfacl -m u:zhangsan:--- /tarena/public [root@Localhost ~]# useradd zhangsan [root@Localhost ~]# su -zhangsan [zhangsan@Localhost ~]# ls /tarena/public [zhangsan@Localhost ~]# cd /tarena/public [zhangsan@Localhost ~]# exit 案例3:权限设置 1、创建文件夹/data/test,设置目录的访问权限，使所有者和所属组具备读写执行的权限；其他人无任何权限。\n1 2 3 [root@Localhost ~]# mkdir -p /data/test [root@Localhost ~]# chmod u=rwx,g=rwx,o=--- /data/test 或者 chmod 770 /data/test [root@Localhost ~]# ls -ld /data/test 2、递归修改文件夹/data/test的归属使所有者为zhangsan，所属组为tarena。\n1 2 [root@Localhost ~]# chown -R zhangsan:tarena /data/test [root@Localhost ~]# ls -ld /data/test 3、请实现在test目录下，新建的所有子文件或目录的所属组都会是tarena。\n1 2 3 [root@Localhost ~]# chmod g+s /data/test [root@Localhost ~]# mkdir /data/test/abc [root@Localhost ~]# ls -ld /data/test/abc 4、为lisi创建ACL访问权限，使得lisi可以查看/etc/shadow文件\n1 2 3 4 5 [root@Localhost ~]# useradd lisi [root@Localhost ~]# setfacl -m u:liai:r /etc/shadow [root@Localhost ~]# getfacl /etc/shadow [root@Localhost ~]# su-lisi [lisi@Localhost ~]# cat /etc 案例4:虚拟机 上操作 将文件 /etc/fstab 拷贝为 /var/tmp/fstab，并调整文件 /var/tmp/fstab权限\n满足以下要求：\n– 此文件的拥有者是 root\n– 此文件对任何人都不可执行\n– 用户 natasha 能够对此文件执行读和写操作\n– 用户 harry 对此文件既不能读，也不能写\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 [root@Localhost ~]# mkdir -p /var/tmp/fstab [root@Localhost ~]# cp /etc/fstab /var/tmp/fstab [root@Localhost ~]# ls -l /var/tmp/fstab [root@Localhost ~]# chmod a-x /var/tmp/fstab [root@Localhost ~]# setfacl -m u:natasha:rw /var/tmp/fstab [root@Localhost ~]# getfacl /var/tmp/fstab [root@Localhost ~]# su -natasha [natasha@Localhost ~]# cat /var/tmp/fstab [natasha@Localhost ~]# echo ceshi \u0026gt;\u0026gt; /var/tmp/fstab [natasha@Localhost ~]# cat /var/tmp/fstab [natasha@Localhost ~]# exit [root@Localhost ~]# setfacl -m u:harry:--- /var/tmp/fstab [root@Localhost ~]# getfacl /var/tmp/fstab [root@Localhost ~]# su-harry [harry@Localhost ~]# cat /var/tmp/fstab [harry@Localhost ~]# echo ceshi \u0026gt;\u0026gt; /var/tmp/fstab [harry@Localhost ~]# exit 案例5:虚拟机上操作 创建一个共用目录 /home/admins，要求如下：\n– 此目录的所属组是 adminuser – adminuser 组的成员对此目录有读写和执行的权限，并且其他用户没有任何权限 – 在此目录中创建的文件，其所属组会自动设置为 属于 adminuser 组 1 2 3 4 5 6 7 8 9 10 [root@Localhost ~]# mkdir /home/admins [root@Localhost ~]# groupadd adminuser [root@Localhost ~]# chown :adminuser /home/admins [root@Localhost ~]# ls -ld /home/admins [root@Localhost ~]# chmod g:rwx,o:--- /home/admins [root@Localhost ~]# chown g+s /home/admins [root@Localhost ~]# ls -ld /home/admins [root@Localhost ~]# mkdir /home/admins/ceshi [root@Localhost ~]# ls -ld/home/admins/ceshi ‍\n","date":"2025-04-14T14:27:42+08:00","permalink":"https://ZackMoel.github.io/xiaoshi/p/linux-%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E4%B8%8E%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/","title":"Linux 文件系统与权限管理"},{"content":"Linux-进程管理与服务管理 一、Linux进程管理 进程\n💡处于运行状态的任务(程序)，叫做计算机的一个进程。\n常见进程\nSSHD进程：远程连接程序 chronyd进程: 负责管理系统日期时间 network: 管理操作系统网络ip地址，网卡，网关，网络连接状态。 firewalld:防火墙，定制有选择性拦截非法的网络连接。(默认 22端口 放开)，其他所有端口都是不被本机以外计算机访问。 其他程序：MySQL、Tomcat、Nginx、自开发程序。 查看进程\n1 2 3 4 5 6 7 # 命令 ps [-参数] # 参数 -a：显示 当前窗口 下的进程 -u：显示 当前用户 下的进程 -x：显示 当前主机 下的所有进程 命令结果含义 1 2 3 PID(进程号) TTY TIME CMD(该程序进程对应那个命令) 2405 pts/0 00:00:00 bash 2427 pts/0 00:00:00 ps 关闭进程\n1 2 3 4 5 6 7 8 9 # 命令 kill [-参数] 进程id 说明：默认情况kill，只能关闭闲置的进程，没有人正在使用。 # 参数 -9 ：强制退出（小心使用：强制杀死程序，不管有没有人正在使用。） -18 ：继续 -19 ：暂停 程序：静态没有运行的代码 占用硬盘空间\n进程：正在运行的代码 占用CPU与内存的资源\n进程唯一标识 : PID\n父进程与子进程 树型结构\nsystemd：所有进程的父进程 上帝进程\n查看进程 pstree — Processes Tree\n格式：pstree [选项] [PID或用户名]\n• 常用命令选项\n-a：显示完整的命令行\n-p：列出对应PID编号\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 [root@localhost ~]# pstree #查看正在运行的进程信息 [root@localhost ~]# useradd lisi [root@localhost ~]# pstree lisi 未发现进程。 [root@localhost ~]# pstree lisi #登录lisi用户，查看进程 bash───vim [root@localhost ~]# pstree -p lisi #显示进程的PID bash(6838)───vim(6874) [root@localhost ~]# pstree -a lisi #显示完成的命令 bash └─vim a.txt 查看进程\nps aux 操作（显示的信息非常详细）\n列出正在运行的所有进程\n用户 进程ID %CPU %内存 虚拟内存 固定内存 终端 状态 起始时间 CPU时间 程序指令\n1 2 3 4 5 6 7 8 9 10 11 [root@localhost ~]# wc -l /etc/passwd 43 /etc/passwd [root@localhost ~]# ps aux | wc -l [root@localhost ~]# ps -elf | wc -l [root@localhost ~]# find /etc -name \u0026#34;*.conf\u0026#34; [root@localhost ~]# find /etc -name \u0026#34;*.conf\u0026#34; | wc -l ps -elf 操作（可以显示进程的父进程PID）\n进程动态排名top 交互式工具\n格式：top [-d 刷新秒数] [-U 用户名]\n1 2 3 4 5 6 7 [root@localhost ~]# top 输入P(大写)，按照CPU进行排序 输入M(大写)，按照内存进行排序 输入q退出 检索进程pgrep — Process Grep\n用途：pgrep [选项]\u0026hellip; 查询条件\n常用命令选项\n-l：输出进程名，而不仅仅是 PID\n-U：检索指定用户的进程\n-x：精确匹配完整的进程名\n1 2 3 [root@localhost ~]# pgrep -l a [root@localhost ~]# pgrep -l c 进程的前后台调度\n• Ctrl + z 组合键\n挂起当前进程（暂停当前的进程并转入后台）\n• jobs 命令\n查看后台任务列表\n• fg 命令\n将后台任务恢复到前台运行\n• bg 命令\n激活后台被挂起的任务\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 [root@localhost /]# sleep 3600 \u0026amp; #进程正在运行的状态放入后台 [root@localhost /]# firefox \u0026amp; [root@localhost ~]# sleep 3600 ^Z #按ctrl +z 暂停放入后台 [1]+ 已停止 sleep 3600 [root@localhost ~]# jobs #查看后台进程的信息 [1]+ 已停止 sleep 3600 [root@localhost ~]# bg 1 #将后台编号为1 的进程恢复运行 [1]+ sleep 3600 \u0026amp; [root@localhost ~]# jobs [1]+ 运行中 sleep 3600 \u0026amp; [root@localhost ~]# fg 1 #将后台编号为1的进程恢复到前台\nsleep 3600\n^C #按ctrl +c 结束进程\n[root@localhost ~]#\n杀死进程\n干掉进程的不同方法\nCtrl+c 组合键，中断当前命令程序\nkill [-9] PID\u0026hellip; 、kill [-9] %后台任务编号\nkillall [-9] 进程名\u0026hellip;\npkill [-9] 查找条件，包含就可以\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 [root@localhost ~]# sleep 3600 \u0026amp; [root@localhost ~]# sleep 3600 \u0026amp; [root@localhost ~]# sleep 3600 \u0026amp; [root@localhost ~]# jobs -l #显示后台进程信息，显示PID [1] 8618 运行中 sleep 3600 \u0026amp; [2]- 8625 运行中 sleep 3600 \u0026amp; [3]+ 8632 运行中 sleep 3600 \u0026amp; [root@localhost ~]# kill 8618 #按照PID杀死 [1] 已终止 sleep 3600 [root@localhost ~]# jobs -l [root@localhost ~]# killall sleep 3600 #杀死所有sleep 3600进程 杀死一个用户开启的所有进程（强制踢出一个用户）\n1 [root@localhost ~]# killall -9 -u lisi 二、Linux服务管理 💡服务可以理解成软件程序​，特点是运行和系统可以绑定​。\n1 2 3 4 5 6 # 常见服务 sshd 远程连接 NetworkManager 网络管理器 chronyd 时钟 firewalld 防火墙 mysqld 数据库 1 2 3 4 5 1. 查看服务状态 systemctl status 服务名 说明： inactive 不可用 active 正在运行 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 2. 启动服务 systemctl start 服务名 3. 重启服务 systemctl restart 服务名 4. 关闭服务 systemctl stop 服务名 例子： 关闭防火墙 systemctl stop firewalld 5. 设置开启自启动 systemctl enable 服务名 例子： 关闭防火墙 6. 关闭开机自启动 systemctl disabled 服务名 ‍\n","date":"2025-04-14T14:20:58+08:00","permalink":"https://ZackMoel.github.io/xiaoshi/p/linux-%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86%E4%B8%8E%E6%9C%8D%E5%8A%A1%E7%AE%A1%E7%90%86/","title":"Linux 进程管理与服务管理"},{"content":" Linux-基础命令与操作 一、 Linux系统 1. Linux系统 💡开源的，免费的类Unix企业服务常用的操作系统，支持多用户，多任务，多处理器。\n1 2 3 Linux继承了Unix以网络为核心的设计思想，是一个性能稳定的多用户网络操作系统 ​Linux也继承了Unix的文件设计思想，一切皆文件(文件夹也是文件)​ Linux之父是“托瓦斯林纳斯” 开源 免费​\n开源：开放Linux操作系统源代码，任何人可以免费使用，且对Linux代码定制升级。\n最安全\n最稳定\n性能效率对比较高\n2.版本说明 💡Linux由于是开源的，所以有很多公司在Linux内核程序基础上开发了自己的有特别功能的程序(工具)，然后，再命令为一个新的版本，因此Linux有众多的版本型号。\n1 总结：严格来讲，Linux操作系统指的是“linux内核+各种软件”. 商业公司维护的发型版本 社区组织维护的发行版本 3.虚拟机的安装 💡通过软件技术，虚拟出一套计算机硬件设备：CPU、内存、硬盘、网卡、显示器。\n版本\nVMware​ 收费 virtrubox​ 免费 Oracle公司 企业虚拟机​ 云服务器​ （1）VMware的安装 VMware17安装包\n1 VMware17激活码:JU090-6039P-08409-8J0QH-2YR7F （2）虚拟创建一个计算机设备​ （3）安装CentOS操作系统 系统盘\n保存了操作系统文件的光盘\n虚拟镜像光盘：CentOS-7-x86_64-DVD-1804.iso​\n安装过程\n2. 安装CentOS7.zip\n（4）命令行界面 CentoS安装好以后，命令行界面，没有图形化操作界面。\n① 原因节省服务器CPU和内存资源。\n② 命令行操作效率，速度，远超过图形化界面。\n（5）vmware使用 开关机 虚拟机路径 快照 克隆 二 、Linux基础命令与操作 1. Linux远程连接 （1）linux工作环境 实际工作中，不会直接触碰服务器，会通过Linux远程连接工具服务器。\n（2）SSH工具 ① 查看Linux的ip地址\nip addr​\n② SecureCRT连接linux\n1 2 3 4 5 6 1. linux的ip 192.168.199.131 2. 用户名 root 3. 密码 admins （3）Windows的ssh（了解）\n1 2 3 1. 打开windows的cmd命令行 2. 输入命令 ssh root@linux的ip地址 ​\n2. 命令行介绍 （1）Linux终端 终端terminal​（命令行客户端） 1 2 3 4 5 6 7 1. 概念：用来连接和操作linux系统的接口，存在于用户和计算机之间沟通的桥梁。 2. 终端快捷键 ① tab ：命令自动补全。 例如： da+tab ② ctrl+c： 强行中断 停止退出当前程序命令。 ③ ↑ ↓ ：直接找到回显之前执行过历史命令。 Linux命令 1 2 3 4 5 1. 命令是一种操作Linux系统的一种指令。 2. linux命令区分大小写。 3. linux命令结构 linux命令 参数 其中多个参数可以组合使用。 （2）命令行提示符 1 2 3 4 5 6 7 [root@baizhi-centos ~]# root ：当前登录系统的用户 @：无意义，仅分隔符 baizhi-centos：计算机名字 ~ ： 当前命令所在的 目录路径 ，home #或者$: 表示当前用户超级管理员，$表示普通用户。 （3）基本命令 查看ip 1 2 3 4 5 1. 完整命令 ip address 2. 简化命令 ip addr 网络ping 1 2 3 4 5 6 7 8 9 10 11 # 命令 ping ip地址 # 参数 -c 次数：设置ping发送数据包次数。 # 案例 本机内部网络是否联通。 ping 127.0.0.1 ping localhost # 案例 ping -c 5 192.168.199.131 清屏 1 clear 关机 序号 命令 备注 1 init 0​ 立刻关机，只有管理员可以使用 2 poweroff​ 立刻关机 3 shutdown​ 立刻或定时关机 重启 序号 命令 备注 1 reboot​ 立即重启 操作系统信息 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 # 场景： 同时拿到10个服务器，判断10个服务器操作系统版本环境是否一致。 # 命令 uname # 参数 -s 输出 内核名称 (默认) -n 输出网络节点上的主机名 -r 输出内核版本 -v 输出内核的构建容器和版本信息 -m 输出主机的硬件架构名称 -p 输出处理器类型或\u0026#34;unknown\u0026#34; -i 输出硬件平台或\u0026#34;unknown\u0026#34; -o 输出操作系统名称 -a 以如下次序输出所有信息。其中若-p和-i的结果不可知则省略 也可以 --all # 注意 多个参数可以合并使用 例如： uname -svr 磁盘信息 1 2 3 1. 查看物理磁盘空间 df是一个用于显示文件系统磁盘空间使用情况的命令行工具，它可以帮助用户查看磁盘分区的总空间、已用空间、可用空间以及挂载点等信息。 df -h 磁盘使用空间 1 2 3 4 5 6 7 8 9 10 11 1. 查看文件或目录的大小 du #语法 du [-ahs] [文件名|目录] #参数 -a 显示子文件的大小 -h 以易读的方式显示 KB,MB,GB等 -s summarize 统计总占有量 说明： -s和-a不能同时使用 例如： du -h 配置硬件信息 1 2 3 4 5 1. 查看CPU信息 lscpu 2. 查看内存 free -h 系统程序的资源占用情况 1 2 3 4 5 6 7 8 9 10 11 12 13 1. 实时查看 #命令： top #快捷键： ↑ ： 上翻 ↓ ：下翻 q ：退出 2. 场景 ① 服务器卡顿 DDOS攻击 中毒 查看原因：top 主机名 1 2 3 4 5 1. 查看主机名 hostname 2. 修改主机名 hostnamectl set-hostname 新主机名 ​\n系统时间 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 # 命令 date \u0026#39;+参数\u0026#39; 说明： 一个日期包含信息：年 月 日 星期 时 分秒 毫秒 纳秒 时区 # 参数 1. 日期格式 %c : 直接显示日期与时间 (2023年10月08日 星期日 15时57分35秒) %x : 直接显示日期 (YYYY-mm-dd) %D : 直接显示日期 (mm/dd/yy) %X : 相当于 %H:%M:%S %T : 直接显示时间 (24 小时制) %r : 直接显示时间 (12 小时制，格式为 hh:mm:ss [AP]M) 2. 提取详细日期属性 %Y : 完整年份 (0000..9999) %y : 年份的最后两位数字 (00.99) %m : 月份 (01..12) %d : 日 (01..31) %H : 小时(00..23) %M : 分钟(00..59) %S : 秒 %n : 下一行 %t : 跳格 tab %p : 显示本地 AM 或 PM 3. 其他日期属性（了解） %Z : 显示时区 %w : 一周中的第几天 (0..6)。说明每星期第0天是周日。 %a : 星期几 (Sun..Sat) %A : 星期几 (Sunday..Saturday) %b : 月份 (Jan..Dec) %B : 月份 (January..December) %s : 从 1970 年 1 月 1 日 00:00:00 UTC 到目前为止的秒数 计算机对于日期信息统计方式：时钟从1970年开始计算过去了多少秒，内部底层存储日期(数字秒) %n : 下一行 %t : 跳格 tab 1 2 # 案例: 获取日期格式显示：xxxx-xx-xx xx:xx:xx date \u0026#39;+%Y-%m-%d %H:%M:%S\u0026#39; 3. 文件管理 （1）Linux文件系统(了解) ① Linux文件系统没有C​ D​ E​ 盘，顶级目录是/​ ② Linux文件类型：目录、文件、符号链接文件​ （2）Inode元数据 1 2 3 4 5 6 7 8 9 1. Linux文件管理 数据 空间： 存放 数据 本身，100MB 10GB 文件本身所在位置。 元空间： 文件 描述信息(元数据) (文件名 大小 日期 用户 类型 文件所在地址)---Inode。 2.场景： Linux文件查找 ① 先在元空间中，找到文件描述信息。速度快。（元空间小），得到文件地址。 ② 如果需要得到文件内容，通过地址直接定位到对应位置即可。--- 寻道过程。 元数据 ​Inode​​ 数据 ​data​​ 概念 文件的描述信息(文件名 大小 类型 权限 日期等等) 文件内真正存储的数据内容 容量 非常小，且不同大小的文件的元数据信息大小相同 256B字节 大小不等：KB MB GB TB等 位置 元空间**（内存+硬盘）​** 数据空间**（硬盘）​** 类比 公安局档案信息、学生档案信息、生死簿 人、学生、鬼 （3）路径命令 命令 作用 常用选项 用法 示例 pwd​ 查看当前命令所在目录 — cd​ 切换目录 — cd [目录]​ cd /home​ ls​ 查看目录中的文件和目录 -a 显示所有文件含隐藏\n-l 显示文件完整描述元数据\n-R 显示指定目录分支内各子目录中的文件清单\nls [选项] [目录]​ `ls -al /root ls -alR /root ls -al \u0026gt; a.txt` 1 2 3 4 5 6 7 8 9 10 11 # 路径特殊字符 1 / : 顶级目录 2 . : 当前路径位置 通常使用相对路径使用 例如：切换到当前目录下的class目录 cd ./class 3 .. : 上一级路径 常用在相对路径。 4 ~ :当前用户所在的home目录， 例如baizhi用户的目录对应 /home/baizhi 例如root用户所在目录，特殊 /root 1 2 3 4 5 6 7 8 9 10 11 # 绝对路径和相对路径 1 绝对路径：是从根目录（/）开始的完整路径，用于定位文件系统中的任何文件或目录。 例如： /home/user/documents/file.txt就是一个绝对路径，它直接指向根目录下的home目录中的user目录下的documents目录中的file.txt文件。 2 相对路径：是相对于当前工作目录的路径。 例如： 如果你在/home/user目录中，要访问documents目录中的file.txt文件，你可以使用相对路径documents/file.txt。 相对路径让你不需要知道文件的完整路径，只需要知道它与当前工作目录的位置关系。 # 理解和正确使用这两种路径类型对于在Linux系统中高效地导航和操作文件至关重要。 ls文件元数据详解1 1 2 3 # 文件类型 d： 目录 -：普通文件 （4）文件操作命令 命令 作用 常用选项 用法 示例 ​touch​​ 创建一个空文件 — touch [文件名.后缀名]​ touch a.txt​ ​mkdir​​ 创建目录 -p 如果父目录不存在则创建 mkdir [选项] [目录名]​ `mkdir test mkdir -p test/user` ​rm​​ 删除文件或目录 -f 删除文件，不需要确认。\n-r 删除目录\n-fr 强制删除目录，不需要确认 rm ``[选项]`` [目录]​ cd /home​ ​cp​​ 复制文件或目录 -r 复制目录（含文件） cp [选项] [源文件] [拷贝后文件]​ `cp a/abc.txt b/bcd.txt cp a/abc.text b cp -r a b cp -r a/* b` ​mv​​ 移动文件 — mv [源文件] [目标目录]​ 参考cp ​find​​ 查找某个文件所在位置 -name 指定搜索的关键词\n说明：关键词可以使用*进行通配符匹配 find [搜索范围目录] [选项] [关键字]​ `find . find / -name \u0026ldquo;a\u0026rdquo; find / -name \u0026ldquo;a.txt\u0026rdquo; find /root -name \u0026ldquo;a.txt\u0026rdquo; find /root -name \u0026quot; *.txt\u0026quot;` 1 2 3 4 1. 课堂案例命令 2. 作业题目 3. 整理笔记（面试题+命令） 4(尝试). 没讲过的命令 试试。 （5）文件读取命令 命令 作用 常用选项 用法 示例 ​cat​​ 一次性读取整个文件，适合查看小文件 — cat [文件路径]​ cat a.txt​ ​less​​ 文件阅读器，可控制翻页，适合查看大文件 — less [文件路径]​\n↑ ：上翻1行\n↓：下翻1行\n空格 ：向下翻页，\nb：向上翻页\nq退出 less a.txt​ ​head​​ 查看文件前几行 -n 行数 head [文件路径] [选项] 行数​ head a.txt -n 2​ ​tail​​ 查看文件后几行，实时跟踪查看\n常用在服务日志文件 -n 行数\n-f 不断刷新实时更新 tail [文件路径] [选项] 行数​ tail -f a.txt -n 5​ ​grep​​ 在文件中搜索关键字，结果获得关键词所在一行文本提取。 -n 显示行号 grep [选项] 关键字 文件路径​ grep -n local a.txt​ ​echo​​ 用于展示一行/打印一行文字到控制台 — echo 字符串|环境变量名​ echo you are best ​ （6）压缩解压 💡将多个文件打包成一个文件。\n作用：\n① 方便管理和移动。把一些备份数据压缩。\n② 将文件空间占用变小，节约磁盘空间。\n③ 将大量小文件，合并成单个压缩文件，将文件在磁盘存放由随机存放转为顺序存放，访问（移动还是拷贝）文件对文件读取由随机读取变成顺序读取。效率快。\nlinux系统下常用的压缩文件格式有 tar.gz​\n1 2 3 4 5 windows系统：rar，zip。 linux压缩格式： 1. tar 2. tar.gz 压缩/解压tar.gz文件\n1 2 3 4 5 6 7 8 9 10 11 1. 压缩文件操作命令： # 命令 tar -cf 压缩文件名 被压缩文件或者目录路径 # 参数 -c 创建压缩文件 -x 解压压缩文件 -f 执行压缩文件名 -v 显示压缩过程的信息。 -z 主要针对tar.gz压缩格式操作需要 # 第二参数 -C 指定文件解压后所在目录。 案例 压缩 tar -zcvf 压缩后文件名.tar.gz 被压缩文件路径 解压缩 默认解压到当前目录下 tar -zxvf 被解压文件名.tar.gz tar -zxvf 被解压文件名.tar.gz -C 解压后文件存放位置路径 （7）帮助指令 💡man指令：查看指定命令的帮助文档。\n1 2 3 4 5 6 7 语法： man 指令 例子: man ls man pwd man cd 💡\u0026ndash;help参数：大部分Linux命令都支持\u0026ndash;help参数，用于显示该命令的简要帮助信息。\n1 2 3 语法： 指令 --help cd --help 4. vi编辑器 💡编辑文本文件的软件程序，例如：txt文件、xx.ini、xxx.py、xxx.xml、xxx.conf。\n所有的类Unix系统中都会内置vi文本编辑器\n启动命令：vi 文件名​\nvi命令的工作模式：\n1 2 3 1. 命令模式（Command mode）：启动vi编辑器时进入的模式，该模式下可以进行复制、粘贴、删除等操作。 2. 输入模式（Insert mode）：在命令模式下按\u0026#34;i\u0026#34;键进入输入模式，该模式下可以修改文本内容。 3. 底线模式（Last line mode）：在命令模式下按下“:”键进入底线命令模式，该模式下可以对文件内容进行替换、保存、或退出编辑。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 三种模式的切换 ![](https://p.sda1.dev/23/310b9c21fbb6dfdc9b00019294b41c7b/image_ZTx1Aay6G2-20240424161452-kttqch7.png) * 各模式下的操作： | 模式名称 | 快捷键/命令 | 支持的操作 | | ------------ | ----------- | ------------------------------------------- | | **命令模式** | `i`​ | 进入输入模式，在光标前插入insert | | | | | | | `o`​ | 进入输入模式，在光标位置下新建一行输入 | | | `: `​ | 进入底线模式 | | | gg | 定位到第一行 | | | G | 定位到最后一行 | | | nyy | n为整数，`复制`​n行，从光标位置向下复制n行。 | | | p | 粘贴到光标的下一行。 | | | ndd | n为整数，删除n行，从光标向下数n行。 | | **底线模式** | set nu | 显示行号 | | | set nonu | 取消行号 | | | `q`​ | 退出不保存 | | | `q!`​ | 强制退出不保存 | | | `w`​ | 保存内容 | | | `wq`​ | 保存退出 | | | `wq!`​ | 强制保存退出 | 注意事项： 1. vi编辑模式，最好不要编写中文。 2. 如果可以，大量内容编写，可以使用外部文本编辑器 mobaxterm外部工具。 ### 5. Linux软件安装 #### （1）RPM软件 \u0026gt; 💡linux中软件包的一种格式，类似windows(exe msi)。 1. 作用：用于在Linux系统中管理（`安装`​、`卸载`​、`查看`​）.rpm程序包。 2. 常用命令参数： * 命令的格式 ```bash rpm [-参数] rpm软件的文件名。 命令参数 作用 pql​ 显示rpm软件包内部文件 i [软件全名]​ 安装应用程序 e [软件名]​ 卸载应用程序 v​ 显示安装过程信息 h ​ 线程进度条 qa 显示所有已安装的程序包 案例：安装tree命令\n1 2 3 4 5 # 安装 rpm -ivh tree文件名.rpm # 卸载 rpm -evh tree关键名 （2）Yum软件包管理器 Yum（全称为 Yellow dog Updater, Modified）是一个在Fedora和RedHat以及SUSE、CentOS中的Shell前端软件包管理器。\n基於RPM包管理，能够从指定的服务器自动下载RPM包并且安装，可以自动处理依赖性关系，并且一次安装所有依赖的软件包，\n无须繁琐地一次次下载、安装。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 ## 列出所有可以安装的软件包 yum list ## 安装软件 yum install -y 软件名 # 安装tree yum install -y tree yum install -y vim ## 卸载软件 yum remove 软件名 ## 更新软件(了解) yum update 软件名 ## 查找软件包 yum search all 软件名 # 例如安装vim [root@one ~]# yum install -y vim 常用的工具 1 2 3 4 5 6 7 8 9 10 11 12 # VIM 编辑器 功能类似vi，比vi增加了关键词高亮效果，便于阅读和编写。 安装：yum install -y vim # wget 下载器 安装： yum install -y wget 命令： wget url地址 [参数] 参数： -P 下载文件的保存路径：指定下载文件所存放的路径。 6.管道命令 概念：\n1 管道 就是可以将两个或者多个命令（程序或者进程）连接到一起，把一个命令的输出作为下一个命令的输入，以这种方式连接的两个或者多个命令就形成了管道（pipe） 管道符：|\n语法\n1 command1 | command2 .... ① 连接多个命令 ② 执行顺序，从左至右，会将前一个命令得输出结果，作为后一个命令输入内容。 例：\n1 2 3 4 5 6 # 查询名字包含ssh的进程 ps -aux | grep ssh # 获取ls -al 输出的前5行 ls -al | head -n 5 # 获取ls -al 输出的前5行，查找是否含有关键字a ls -al | head -n 5 | grep a 7.用户与用户组 （1）用户配置文件 /etc/passwd​：存储用户信息。\n格式：用户名:密码占位符:UID:GID:描述信息:家目录:默认Shell​\n示例：\n1 root:x:0:0:root:/root:/bin/bash /etc/shadow​：存储用户密码信息（加密）。\n格式：用户名:加密密码:最后修改时间:最小间隔:最大间隔:警告时间:失效时间:保留字段​\n示例：\n1 root:$6$randomsalt$encryptedpassword:19180:0:99999:7::: （2）用户管理命令 useradd​：创建用户。\n示例：\n1 useradd -m -s /bin/bash username 常用选项：\n-m​：创建家目录。 -s​：指定默认 Shell。 -u​：指定 UID。 -g​：指定主用户组。 -G​：指定附加用户组。 usermod​：修改用户信息。\n示例：\n1 usermod -aG groupname username 常用选项：\n-aG​：将用户添加到附加用户组。 -s​：修改默认 Shell。 -L​：锁定用户。 -U​：解锁用户。 userdel​：删除用户。\n示例：\n1 userdel -r username 常用选项：\n-r​：删除用户及其家目录。 passwd​：修改用户密码。\n示例：\n1 passwd username （3）查看用户信息 id​：查看用户 UID、GID 和所属组。\n示例：\n1 id username whoami​：查看当前登录用户。\nw​：查看当前登录用户及其活动。\n（4）用户组配置文件 /etc/group​：存储用户组信息。\n格式：组名:组密码占位符:GID:组成员​\n示例：\n1 developers:x:1001:user1,user2 （5）用户组管理命令 groupadd​：创建用户组。\n示例：\n1 groupadd groupname groupmod​：修改用户组信息。\n示例：\n1 groupmod -n newgroupname oldgroupname groupdel​：删除用户组。\n示例：\n1 groupdel groupname （6）查看用户组信息 groups​：查看当前用户所属组。\n示例：\n1 groups username （7）其他相关命令 su​：切换用户。\n示例：\n1 su - username sudo​：以超级用户权限执行命令。\n示例：\n1 sudo command visudo​：编辑 /etc/sudoers​ 文件，配置用户权限。\n（8）常用操作示例 创建用户并添加到组 1 2 useradd -m -s /bin/bash user1 usermod -aG developers user1 查看用户所属组 1 groups user1 修改文件权限 1 2 chmod 755 script.sh chown user1:developers script.sh 切换用户 1 su - user1 ","date":"2025-04-12T22:28:22+08:00","permalink":"https://ZackMoel.github.io/xiaoshi/p/linux%E7%9B%B8%E5%85%B3%E4%B8%8E%E7%BD%91%E7%BB%9C/","title":"Linux相关与网络"}]